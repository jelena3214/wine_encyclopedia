# Generated by Django 4.2.1 on 2023-05-23 11:35

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Korisnik',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('javnoime', models.CharField(blank=True, db_column='javnoIme', max_length=20, null=True)),
                ('adresa', models.CharField(blank=True, max_length=50, null=True)),
                ('brtelefona', models.CharField(blank=True, db_column='brTelefona', max_length=50, null=True)),
            ],
            options={
                'db_table': 'korisnik',
                'managed': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ponuda',
            fields=[
                ('idponuda', models.IntegerField(db_column='idPonuda', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ponuda',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pretplacen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datumpocetak', models.DateTimeField(blank=True, db_column='datumPocetak', null=True)),
                ('datumkraj', models.DateTimeField(blank=True, db_column='datumKraj', null=True)),
                ('trenutnistatus', models.CharField(blank=True, db_column='trenutniStatus', max_length=20, null=True)),
            ],
            options={
                'db_table': 'pretplacen',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pretplata',
            fields=[
                ('idpretplata', models.IntegerField(db_column='idPretplata', primary_key=True, serialize=False)),
                ('naslov', models.CharField(blank=True, max_length=20, null=True)),
                ('cena', models.IntegerField(blank=True, null=True)),
                ('opis', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pretplata',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recenzija',
            fields=[
                ('idrecenzija', models.IntegerField(db_column='idRecenzija', primary_key=True, serialize=False)),
                ('opisrec', models.CharField(blank=True, db_column='opisRec', max_length=20, null=True)),
                ('ocena', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recenzija',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rezultatupitnika',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'rezultatupitnika',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Slika',
            fields=[
                ('idslika', models.IntegerField(db_column='idSlika', primary_key=True, serialize=False)),
                ('slika', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'slika',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Somelijer',
            fields=[
                ('idsomelijer', models.IntegerField(db_column='idSomelijer', primary_key=True, serialize=False)),
                ('ime', models.CharField(blank=True, max_length=20, null=True)),
                ('biografija', models.TextField(blank=True, null=True)),
                ('slika', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'somelijer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('idtag', models.IntegerField(db_column='idTag', primary_key=True, serialize=False)),
                ('tag', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Termin',
            fields=[
                ('idtermin', models.IntegerField(db_column='idTermin', primary_key=True, serialize=False)),
                ('vreme', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'termin',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ukorpi',
            fields=[
                ('idkorpa', models.IntegerField(db_column='idKorpa', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'ukorpi',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Upitnikodgovor',
            fields=[
                ('idodgovor', models.IntegerField(db_column='idOdgovor', primary_key=True, serialize=False)),
                ('odgovor', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'upitnikodgovor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Upitnikpitanje',
            fields=[
                ('idpitanje', models.IntegerField(db_column='idPitanje', primary_key=True, serialize=False)),
                ('tekst', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'upitnikpitanje',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vrstaobilaska',
            fields=[
                ('idobilazak', models.IntegerField(db_column='idObilazak', primary_key=True, serialize=False)),
                ('naziv', models.CharField(blank=True, max_length=20, null=True)),
                ('cena', models.IntegerField(blank=True, null=True)),
                ('opis', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'vrstaobilaska',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kupac',
            fields=[
                ('korisnik_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('datumrodjenja', models.DateTimeField(blank=True, db_column='datumRodjenja', null=True)),
            ],
            options={
                'db_table': 'kupac',
                'managed': False,
            },
            bases=('baza.korisnik',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Ponudaprostor',
            fields=[
                ('idponuda', models.OneToOneField(db_column='idPonuda', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='baza.ponuda')),
            ],
            options={
                'db_table': 'ponudaprostor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proizvodjac',
            fields=[
                ('korisnik_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('imefirme', models.CharField(blank=True, db_column='imeFirme', max_length=50, null=True)),
                ('registarskibroj', models.IntegerField(blank=True, db_column='registarskiBroj', null=True)),
                ('opis', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'proizvodjac',
                'managed': False,
            },
            bases=('baza.korisnik',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rezervacija',
            fields=[
                ('idtermin', models.OneToOneField(db_column='idTermin', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='baza.termin')),
            ],
            options={
                'db_table': 'rezervacija',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vino',
            fields=[
                ('idponuda', models.OneToOneField(db_column='idPonuda', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='baza.ponuda')),
                ('naziv', models.CharField(blank=True, max_length=20, null=True)),
                ('cena', models.IntegerField(blank=True, null=True)),
                ('opisvina', models.CharField(blank=True, db_column='opisVina', max_length=200, null=True)),
                ('brojprodatih', models.IntegerField(blank=True, db_column='brojProdatih', null=True)),
            ],
            options={
                'db_table': 'vino',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Obilazak',
            fields=[
                ('idponuda', models.OneToOneField(db_column='idPonuda', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='baza.ponudaprostor')),
                ('cenasomelijera', models.IntegerField(blank=True, db_column='cenaSomelijera', null=True)),
            ],
            options={
                'db_table': 'obilazak',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Proslava',
            fields=[
                ('idponuda', models.OneToOneField(db_column='idPonuda', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='baza.ponudaprostor')),
                ('opisproslave', models.TextField(blank=True, db_column='opisProslave', null=True)),
                ('cenapoosobi', models.IntegerField(blank=True, db_column='cenaPoOsobi', null=True)),
                ('kapacitet', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'proslava',
                'managed': False,
            },
        ),
    ]
